# Generated by Django 5.0.7 on 2025-07-25 09:24

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('branch_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('division_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('lead_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('contact', models.BigIntegerField(null=True)),
                ('address', models.CharField(null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=20)),
                ('city', models.CharField(null=True)),
                ('landmark', models.CharField(null=True)),
                ('lead_type', models.CharField(choices=[('raw', 'Raw'), ('before visit', 'Before Visit'), ('completed', 'Completed'), ('after visit', 'After Visit')], max_length=120, null=True)),
                ('source', models.CharField(max_length=120, null=True)),
                ('category', models.CharField(max_length=120, null=True)),
                ('pan_vat', models.CharField(max_length=120, null=True)),
                ('company_name', models.CharField(max_length=120, null=True)),
                ('tentetive_visit_date', models.DateTimeField(null=True)),
                ('tentetive_purchase_date', models.DateTimeField(null=True)),
                ('is_customer', models.BooleanField(default=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('assign_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leads', to='user.users')),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leads', to='services.branch')),
                ('division', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leads', to='services.division')),
            ],
        ),
        migrations.CreateModel(
            name='Followup',
            fields=[
                ('followup_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('followup_date', models.DateTimeField(null=True)),
                ('followup_type', models.CharField(choices=[('overdue', 'Overdue'), ('pending', 'Pending'), ('completed', 'Completed')], max_length=120, null=True)),
                ('followup_remarks', models.TextField(null=True)),
                ('entry_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='followups', to='user.users')),
                ('lead', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='followups', to='services.lead')),
            ],
        ),
        migrations.CreateModel(
            name='AssignToUser',
            fields=[
                ('assigntouser', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_leads', to='user.users')),
                ('lead', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assign_to_users', to='services.lead')),
            ],
        ),
        migrations.CreateModel(
            name='LeadLog',
            fields=[
                ('leadlog_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('remarks', models.TextField(null=True)),
                ('entry_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('followup', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lead_logs', to='services.followup')),
                ('lead', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lead_logs', to='services.lead')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lead_logs', to='user.users')),
            ],
        ),
        migrations.CreateModel(
            name='SubDivision',
            fields=[
                ('subdivision_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('division', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subdivisions', to='services.division')),
            ],
        ),
        migrations.AddField(
            model_name='lead',
            name='subdivision',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leads', to='services.subdivision'),
        ),
    ]
